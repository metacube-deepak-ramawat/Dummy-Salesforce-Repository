name: Salesforce Authentication, Test Validation & Code Coverage Check

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  auth-and-test-salesforce:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install Salesforce CLI (@salesforce/cli)
        run: npm install --global @salesforce/cli

      - name: Install jq (JSON processor)
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Write JWT Key from Secret
        run: echo "${{ secrets.SF_JWT_KEY }}" > server.key

      - name: Authenticate to Salesforce using JWT
        run: sf org login jwt --client-id "${{ secrets.SF_CLIENT_ID }}" --jwt-key-file server.key --username "${{ secrets.SF_USERNAME }}" --instance-url "${{ secrets.SF_ORG_URL }}" --set-default --alias my-org

      - name: Confirm authentication
        run: sf org list

      - name: Create test-results directory
        run: mkdir -p test-results

      # Validate deployment before running tests
      - name: Validate deployment with tests
        run: |
          sf project deploy start \
            --dry-run \
            --wait 20 \
            --target-org my-org \
            --ignore-conflicts \
            --test-level RunLocalTests \
            --json > test-results/deploy-validation.json || true

      - name: Debug - Show deployment validation result
        run: cat test-results/deploy-validation.json

      - name: Extract and check deployment validation result
        run: |
          deploySuccess=$(jq -r '.result.success // false' test-results/deploy-validation.json)

          if [ "$deploySuccess" != "true" ]; then
            echo "❌ Deployment validation failed."
            exit 1
          fi
          echo "✅ Deployment validation successful."

      # Run tests and check code coverage
      - name: Run all Apex tests with code coverage
        run: |
          sf apex test run --test-level RunLocalTests \
            --code-coverage \
            --wait 20 \
            --target-org my-org \
            --json > test-results/test-result.json

      - name: Debug - Show test result JSON
        run: cat test-results/test-result.json

      - name: Fail if tests fail 
        run: |
          numFailures=$(jq '.result.summary.failing' test-results/test-result.json)
          if [ "$numFailures" -gt 0 ]; then
            echo "❌ $numFailures test(s) failed."
            exit 1
          fi
          echo "✅ All tests passed."

      - name: Check code coverage threshold (30%)
        run: |
          totalCoverage=$(jq '.result.coverage.coverageSummary.percentCovered // 0' test-results/test-result.json)
          echo "📊 Total code coverage: ${totalCoverage}%"
          if [ "$totalCoverage" -lt 30 ]; then
            echo "❌ Code coverage is below the required 30% threshold."
            exit 1
          fi
          echo "✅ Code coverage meets the threshold."
